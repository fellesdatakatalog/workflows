name: Reusable deploy

on:
  workflow_call:
    inputs:
      app_name:
        required: false
        type: string
      image:
        required: false
        type: string
      cluster:
        required: true
        type: string
      environment:
        required: true
        type: string
      monorepo_app:
        required: false
        type: boolean
        default: false
    secrets:
      GH_TOKEN:
        required: true
      DIGDIR_FDK_AUTODEPLOY:
        required: true

jobs:
  kustomize-deploy:
    name: Deploy to ${{ inputs.environment }} environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Create short sha
        run: echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_AUTODEPLOY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ inputs.cluster }}
          location: europe-north1-a

      - name: Install kustomize
        run: >-
          curl -sSLo - https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz
          | tar -xz --directory /usr/local/bin

      - name: Install yq
        run: >-
          curl -sSLo - https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_amd64.tar.gz
          | tar -xz --directory /usr/local/bin

      - name: Deploy with kustomize
        run: |
          find deploy -name '*.yaml' | xargs sed -i "s/\$(GIT_COMMIT_SHA)/${{ github.sha }}/"
          cd deploy/${{ inputs.environment }}
          if ${{ inputs.monorepo_app }}; then cd ${{ inputs.app_name }}; fi
          if [[ "${{ inputs.image }}" != "" ]]; then kustomize edit set image app=${{ inputs.image }}; fi
          kustomize build > .build.yaml
          kubectl apply -f .build.yaml
          cat .build.yaml | yq 'select(.kind == "Deployment" or .kind == "Pod" or .kind == "ReplicaSet" or .kind == "StatefulSet")' | kubectl rollout status -f -
